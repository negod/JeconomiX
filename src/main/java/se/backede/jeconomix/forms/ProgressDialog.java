/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package se.backede.jeconomix.forms;

import com.backede.fileutils.xml.reader.XmlReader;
import java.util.function.Consumer;
import lombok.extern.slf4j.Slf4j;
import se.backede.jeconomix.dto.ProgressDto;
import se.backede.jeconomix.dto.export.Companies;
import se.backede.jeconomix.event.EventController;
import se.backede.jeconomix.event.events.ProgressEvent;
import se.backede.jeconomix.forms.importexport.ImportSummaryDialog;

/**
 *
 * @author Joakim Backede ( joakim.backede@outlook.com )
 */
@Slf4j
public class ProgressDialog extends javax.swing.JDialog {

    private static final long serialVersionUID = 1L;

    private final XmlReader<Companies> READER = new XmlReader<>();

    public static final int IMPORT = 1;
    public static final int EXPORT = 2;

    public static final String IMPORT_LABEL_TEXT = "Importing progress ";
    public static final String EXPORT_LABEL_TEXT = "Exporting progress ";

    private final String TOTAL_RECORDS = "Total records processed: {}";
    private final String INVALID_RECORDS = "Total invalid records discarded: {}";
    private final String DUPLICATE_RECORDS = "Total duplicate records discarded: {}";

    private final String PROCESSING_DONE = "Success! ";
    private final String PROCESSING_ERROR = "Error when processing data ";

    /**
     * Creates new form ImportProgressbar
     *
     * @param parent
     * @param modal
     */
    public ProgressDialog(java.awt.Frame parent, boolean modal, Integer importExport) {
        super(parent, modal);
        initComponents();

        setEvents();

        switch (importExport) {
            case ProgressDialog.IMPORT:
                importLabel.setText(IMPORT_LABEL_TEXT);
                break;
            case ProgressDialog.EXPORT:
                importLabel.setText(EXPORT_LABEL_TEXT);
                break;
            default:
                log.error("Could not determin progressbar type setting to IMPORT as default");
                importLabel.setText(IMPORT_LABEL_TEXT);
        }

        okButton.setEnabled(false);
    }

    private void setEvents() {

        //Done and Close event
        Consumer<ProgressDto> doneAndClose = dto -> this.dispose();
        EventController.getInstance().addObserver(ProgressEvent.DONE_AND_CLOSE, doneAndClose);

        //Max value event
        Consumer<ProgressDto> setMaxValue = dto -> progressBar.setMaximum(dto.getValue());
        EventController.getInstance().addObserver(ProgressEvent.SET_MAX_VALUE, setMaxValue);

        //Increase value event
        Consumer<ProgressDto> increaseValue = dto -> {
            progressBar.setValue(progressBar.getValue() + dto.getValue());
            nameLabel.setText(dto.getText());
        };
        EventController.getInstance().addObserver(ProgressEvent.INCREASE, increaseValue);

        //Done event
        Consumer<ProgressDto> setDone = dto -> {

            progressBar.setValue(progressBar.getMaximum());
            nameLabel.setText(dto.getText());
            importLabel.setText(PROCESSING_DONE);
            okButton.setEnabled(true);

            StringBuilder builder = new StringBuilder();
            if (dto.getDuplecateRecords() != null) {
                String duplicateRecords = DUPLICATE_RECORDS.replace("{}", dto.getDuplecateRecords().toString());
                builder.append(duplicateRecords).append("\n");
            }

            if (dto.getTotalRecords() != null) {
                String totalRecords = TOTAL_RECORDS.replace("{}", dto.getTotalRecords().toString());
                builder.append(totalRecords).append("\n");
            }

            if (dto.getInvalidRecords() != null) {
                String invalidRecords = INVALID_RECORDS.replace("{}", dto.getInvalidRecords().toString());
                builder.append(invalidRecords);
            }

            if (builder.length() > 1) {
                new ImportSummaryDialog(this, true, builder.toString()).setVisible(true);
            }

        };

        EventController.getInstance().addObserver(ProgressEvent.DONE, setDone);

        //Error event
        Consumer<ProgressDto> error = dto -> {
            progressBar.setValue(progressBar.getValue() + dto.getValue());
            nameLabel.setText(dto.getText());
            importLabel.setText(PROCESSING_ERROR);
            okButton.setEnabled(true);
        };
        EventController.getInstance().addObserver(ProgressEvent.ERROR, error);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        progressBar = new javax.swing.JProgressBar();
        importLabel = new javax.swing.JLabel();
        okButton = new javax.swing.JToggleButton();
        nameLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        importLabel.setText("Importing in progress..");

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        nameLabel.setText("Item importing...");
        nameLabel.setMaximumSize(new java.awt.Dimension(213, 16));
        nameLabel.setMinimumSize(new java.awt.Dimension(213, 16));
        nameLabel.setPreferredSize(new java.awt.Dimension(213, 16));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(okButton)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(importLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(nameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(28, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(importLabel)
                    .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(okButton)
                .addGap(10, 10, 10))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_okButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel importLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JToggleButton okButton;
    private javax.swing.JProgressBar progressBar;
    // End of variables declaration//GEN-END:variables

}
